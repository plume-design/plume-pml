/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: stats_pub.proto */

#ifndef PROTOBUF_C_stats_5fpub_2eproto__INCLUDED
#define PROTOBUF_C_stats_5fpub_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _StsPub__Survey StsPub__Survey;
typedef struct _StsPub__Device StsPub__Device;
typedef struct _StsPub__Client StsPub__Client;


/* --- enums --- */


/* --- messages --- */

struct  _StsPub__Survey
{
  ProtobufCMessage base;
  /*
   * Timestamp in seconds 
   */
  uint32_t timestamp;
  /*
   * Busy = Rx + Tx + Interference 
   */
  uint32_t busy;
  /*
   * Tx 
   */
  uint32_t busy_tx;
  /*
   * Rx = Rx_obss + Rx_self_success + Rx_self_err 
   */
  uint32_t busy_rx;
  /*
   * Rx_self_success 
   */
  uint32_t busy_self;
  /*
   * 40MHz extension channel busy 
   */
  uint32_t busy_ext;
  /*
   * Noise Floor on the current channel 
   */
  int32_t noise_floor;
};
#define STS_PUB__SURVEY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sts_pub__survey__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


struct  _StsPub__Device
{
  ProtobufCMessage base;
  /*
   * Timestamp in seconds 
   */
  uint32_t timestamp;
  /*
   * Total amount of RAM memory 
   */
  uint32_t mem_total;
  /*
   * Amount of used RAM memory 
   */
  uint32_t mem_used;
  /*
   * Momental CPU usage 
   */
  uint32_t cpu_util;
  /*
   * Average CPU usage for last 1 min 
   */
  double cpu_util_1m;
  /*
   * Average CPU usage for last 5 min 
   */
  double cpu_util_5m;
  /*
   * Average CPU usage for last 15 min 
   */
  double cpu_util_15m;
};
#define STS_PUB__DEVICE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sts_pub__device__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


struct  _StsPub__Client
{
  ProtobufCMessage base;
  /*
   * Timestamp in seconds 
   */
  uint32_t timestamp;
  uint64_t bytes_tx;
  uint64_t bytes_rx;
  uint64_t frames_tx;
  uint64_t frames_rx;
  uint64_t retries_rx;
  uint64_t retries_tx;
  uint64_t errors_rx;
  uint64_t errors_tx;
  double rate_rx;
  double rate_tx;
  int32_t rssi;
};
#define STS_PUB__CLIENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sts_pub__client__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


/* StsPub__Survey methods */
void   sts_pub__survey__init
                     (StsPub__Survey         *message);
size_t sts_pub__survey__get_packed_size
                     (const StsPub__Survey   *message);
size_t sts_pub__survey__pack
                     (const StsPub__Survey   *message,
                      uint8_t             *out);
size_t sts_pub__survey__pack_to_buffer
                     (const StsPub__Survey   *message,
                      ProtobufCBuffer     *buffer);
StsPub__Survey *
       sts_pub__survey__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sts_pub__survey__free_unpacked
                     (StsPub__Survey *message,
                      ProtobufCAllocator *allocator);
/* StsPub__Device methods */
void   sts_pub__device__init
                     (StsPub__Device         *message);
size_t sts_pub__device__get_packed_size
                     (const StsPub__Device   *message);
size_t sts_pub__device__pack
                     (const StsPub__Device   *message,
                      uint8_t             *out);
size_t sts_pub__device__pack_to_buffer
                     (const StsPub__Device   *message,
                      ProtobufCBuffer     *buffer);
StsPub__Device *
       sts_pub__device__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sts_pub__device__free_unpacked
                     (StsPub__Device *message,
                      ProtobufCAllocator *allocator);
/* StsPub__Client methods */
void   sts_pub__client__init
                     (StsPub__Client         *message);
size_t sts_pub__client__get_packed_size
                     (const StsPub__Client   *message);
size_t sts_pub__client__pack
                     (const StsPub__Client   *message,
                      uint8_t             *out);
size_t sts_pub__client__pack_to_buffer
                     (const StsPub__Client   *message,
                      ProtobufCBuffer     *buffer);
StsPub__Client *
       sts_pub__client__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sts_pub__client__free_unpacked
                     (StsPub__Client *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*StsPub__Survey_Closure)
                 (const StsPub__Survey *message,
                  void *closure_data);
typedef void (*StsPub__Device_Closure)
                 (const StsPub__Device *message,
                  void *closure_data);
typedef void (*StsPub__Client_Closure)
                 (const StsPub__Client *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sts_pub__survey__descriptor;
extern const ProtobufCMessageDescriptor sts_pub__device__descriptor;
extern const ProtobufCMessageDescriptor sts_pub__client__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_stats_5fpub_2eproto__INCLUDED */
